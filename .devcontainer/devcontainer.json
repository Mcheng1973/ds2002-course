// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.163.1/containers/docker-existing-dockerfile
{
	"name": "DS2002 Course Container",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"customizations":{
		"vscode": {
			"settings": {"terminal.integrated.shell.linux": null},
			"extensions": []
		}
	},

	// Add the IDs of extensions you want installed when the container is created.
	// "runArgs": ["--env-file",".devcontainer/devcontainer.env"],
	"mounts": [ 
		"source=/Users/nmagee/.aws,target=/root/.aws,type=bind",
		"source=/Users/nmagee/.ssh,target=/root/.ssh,type=bind"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [8000, 8080],

	"containerEnv": {
    	"MY_CONTAINER_VAR": "some-value-here",
    	"TWILIO_AUTH_TOKEN": "${localEnv:TWILIO_AUTH_TOKEN}"
	},

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": "pip install -r /root/requirements.txt"

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
